version: '3'
services:
  minio:
    image: minio/minio
    command: "server /data"
    environment:
      MINIO_ACCESS_KEY: "admin"
      MINIO_SECRET_KEY: "oEzfFZglATFEauhD"
    volumes:
      - /home/data/minio/data:/data
      - /home/emgrp/app/minio/config:/root/.minio
    ports:
      - "9000:9000"
    restart: always
    networks:
      blade_net:
        ipv4_address: 172.30.0.28

  mysql:
    image: mysql:5.7
    environment:
      - TZ=Asia/Shanghai
      - "MYSQL_ROOT_PASSWORD=1qaz2wsx3edc"
    volumes:
      - /home/emgrp/app/mysql/conf.d:/etc/mysql/conf.d
      - /home/data/mysql/data:/var/lib/mysql
    restart: always
    ports:
      - "3306:3306"
    networks:
      blade_net:
        ipv4_address: 172.30.0.38

  hbase:
    image: harisekhon/hbase:1.3
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - /home/data/hbase/data:/hbase-data
    restart: always
    ports:
      - "22181:2181"
    networks:
      blade_net:
        ipv4_address: 172.30.0.20

  nacos:
    image: nacos/nacos-server:1.2.0
    hostname: "nacos-standalone"
    environment:
      - MODE=standalone
      - TZ=Asia/Shanghai
    volumes:
      - /home/emgrp/app/nacos/standalone-logs/:/home/nacos/logs
      - /home/emgrp/app/nacos/init.d/custom.properties:/home/nacos/init.d/custom.properties
    restart: always
    ports:
      - "8848:8848"
    networks:
      blade_net:
        ipv4_address: 172.30.0.48

  sentinel:
    image: bladex/sentinel-dashboard:1.7.1
    hostname: "sentinel"
    environment:
      - TZ=Asia/Shanghai
    ports:
      - 8858:8858
    restart: on-failure
    networks:
      blade_net:
        ipv4_address: 172.30.0.58

  seata-server:
    image: seataio/seata-server:1.1.0
    hostname: "seata-server"
    ports:
      - 8091:8091
    environment:
      - TZ=Asia/Shanghai
      - SEATA_PORT=8091
      - STORE_MODE=file
    networks:
      blade_net:
        ipv4_address: 172.30.0.68

  web-nginx:
    image: nginx:stable-alpine-perl
    hostname: "web-nginx"
    environment:
      - TZ=Asia/Shanghai
    ports:
      - 8000:8000
      - 8100:8100
    volumes:
      - /home/emgrp/app/web/html:/usr/share/nginx/html
      - /docker/emgrp/app/nginx/config/nginx.conf:/etc/nginx/nginx.conf
    privileged: true
    restart: always
    networks:
      - blade_net

  blade-redis:
    image: redis:5.0.2-alpine
    hostname: "blade-redis"
    environment:
      - TZ=Asia/Shanghai
    ports:
      - 3379:6379
    volumes:
      - /home/data/redis/data:/data
    command: "redis-server --appendonly yes --requirepass gAFo53x79peYonRz"
    privileged: true
    restart: always
    networks:
      - blade_net

  blade-admin:
    image: "${REGISTER}/blade/blade-admin:${TAG}"
    environment:
      - TZ=Asia/Shanghai
    ports:
      - 7002:7002
    privileged: true
    restart: always
    networks:
      - blade_net

  blade-turbine:
    image: "${REGISTER}/blade/blade-turbine:${TAG}"
    environment:
      - TZ=Asia/Shanghai
    ports:
      - 7003:7003
    privileged: true
    restart: always
    networks:
      - blade_net

  blade-zipkin:
    image: "${REGISTER}/blade/blade-zipkin:${TAG}"
    environment:
      - TZ=Asia/Shanghai
    ports:
      - 9411:9411
    privileged: true
    restart: always
    networks:
      - blade_net

  blade-gateway1:
    image: "${REGISTER}/blade/blade-gateway:${TAG}"
    environment:
      - TZ=Asia/Shanghai
    privileged: true
    restart: always
    networks:
      blade_net:
        ipv4_address: 172.30.0.81

  blade-auth1:
    image: "${REGISTER}/blade/blade-auth:${TAG}"
    environment:
      - TZ=Asia/Shanghai
    privileged: true
    restart: always
    networks:
      blade_net:
        ipv4_address: 172.30.0.91

  blade-log:
    image: "${REGISTER}/blade/blade-log:${TAG}"
    environment:
      - TZ=Asia/Shanghai
    privileged: true
    restart: always
    networks:
      - blade_net

  blade-desk:
    image: "${REGISTER}/blade/blade-desk:${TAG}"
    environment:
      - TZ=Asia/Shanghai
    privileged: true
    restart: always
    networks:
      - blade_net

  blade-user:
    image: "${REGISTER}/blade/blade-user:${TAG}"
    environment:
      - TZ=Asia/Shanghai
    privileged: true
    restart: always
    networks:
      - blade_net

  blade-system:
    image: "${REGISTER}/blade/blade-system:${TAG}"
    environment:
      - TZ=Asia/Shanghai
    privileged: true
    restart: always
    networks:
      - blade_net

  blade-resource:
    image: "${REGISTER}/blade/blade-resource:${TAG}"
    environment:
      - TZ=Asia/Shanghai
    privileged: true
    restart: always
    networks:
      - blade_net
  emgrp-task:
    image: "${REGISTER}/blade/emgrp-task:${TAG}"
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - /home/data/model/source:/home/data/model/source
    privileged: true
    restart: always
    networks:
      - blade_net

  emgrp-uav:
    image: "${REGISTER}/blade/emgrp-uav:${TAG}"
    environment:
      - TZ=Asia/Shanghai
    privileged: true
    restart: always
    ports:
      - 11000:11000
    networks:
      - blade_net

  emgrp-data:
    image: "${REGISTER}/blade/emgrp-data:${TAG}"
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - /home/emgrp/app/ffmpeg/ffmpeg-4.2.2-amd64-static/:/emgrp/ffmpeg/
    privileged: true
    restart: always
    networks:
      - blade_net

  emgrp-person:
    image: "${REGISTER}/blade/emgrp-person:${TAG}"
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - /home/data/signalling/:/home/data/signalling
    privileged: true
    restart: always
    networks:
      - blade_net

  gostream:
    image: gostream:latest
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - /home/emgrp/app/ffmpeg/ffmpeg-4.2.2-amd64-static/:/emgrp/ffmpeg/
      - /home/emgrp/app/gostream/config/config.yaml:/blade/gostream/config.yaml
    privileged: true
    restart: always
    ports:
      - 10001:10001
      - 10002:10002
    networks:
      - blade_net
  influxdb:
    image: influxdb:1.8
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - /home/emgrp/app/influxdb/influxdb.conf:/etc/influxdb/influxdb.conf
      - /home/data/influxdb:/var/lib/influxdb
    restart: always
    ports:
      - "8086:8086"
    networks:
      blade_net:
        ipv4_address: 172.30.0.101

networks:
  blade_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/16
