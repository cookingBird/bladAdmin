// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PlanLine.proto

package org.springblade.uav.proto;

public final class PlanLine {
  private PlanLine() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface PlanLineDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PlanLineData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *结束航线后动作：1返航，2原地悬停，3原地降落
     * </pre>
     *
     * <code>uint32 finishedAction = 1;</code>
     */
    int getFinishedAction();

    /**
     * <pre>
     *最大飞行速度
     * </pre>
     *
     * <code>float maxSpeed = 2;</code>
     */
    float getMaxSpeed();

    /**
     * <pre>
     *自动飞行速度
     * </pre>
     *
     * <code>float autoSpeed = 3;</code>
     */
    float getAutoSpeed();

    /**
     * <pre>
     *坐标点数组
     * </pre>
     *
     * <code>repeated .PointData points = 4;</code>
     */
    java.util.List<PointData>
        getPointsList();
    /**
     * <pre>
     *坐标点数组
     * </pre>
     *
     * <code>repeated .PointData points = 4;</code>
     */
    PointData getPoints(int index);
    /**
     * <pre>
     *坐标点数组
     * </pre>
     *
     * <code>repeated .PointData points = 4;</code>
     */
    int getPointsCount();
    /**
     * <pre>
     *坐标点数组
     * </pre>
     *
     * <code>repeated .PointData points = 4;</code>
     */
    java.util.List<? extends PointDataOrBuilder>
        getPointsOrBuilderList();
    /**
     * <pre>
     *坐标点数组
     * </pre>
     *
     * <code>repeated .PointData points = 4;</code>
     */
    PointDataOrBuilder getPointsOrBuilder(
            int index);
  }
  /**
   * Protobuf type {@code PlanLineData}
   */
  public  static final class PlanLineData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:PlanLineData)
      PlanLineDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PlanLineData.newBuilder() to construct.
    private PlanLineData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PlanLineData() {
      points_ = java.util.Collections.emptyList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new PlanLineData();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PlanLineData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              finishedAction_ = input.readUInt32();
              break;
            }
            case 21: {

              maxSpeed_ = input.readFloat();
              break;
            }
            case 29: {

              autoSpeed_ = input.readFloat();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                points_ = new java.util.ArrayList<PointData>();
                mutable_bitField0_ |= 0x00000001;
              }
              points_.add(
                  input.readMessage(PointData.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          points_ = java.util.Collections.unmodifiableList(points_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return PlanLine.internal_static_PlanLineData_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return PlanLine.internal_static_PlanLineData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              PlanLineData.class, Builder.class);
    }

    public static final int FINISHEDACTION_FIELD_NUMBER = 1;
    private int finishedAction_;
    /**
     * <pre>
     *结束航线后动作：1返航，2原地悬停，3原地降落
     * </pre>
     *
     * <code>uint32 finishedAction = 1;</code>
     */
    public int getFinishedAction() {
      return finishedAction_;
    }

    public static final int MAXSPEED_FIELD_NUMBER = 2;
    private float maxSpeed_;
    /**
     * <pre>
     *最大飞行速度
     * </pre>
     *
     * <code>float maxSpeed = 2;</code>
     */
    public float getMaxSpeed() {
      return maxSpeed_;
    }

    public static final int AUTOSPEED_FIELD_NUMBER = 3;
    private float autoSpeed_;
    /**
     * <pre>
     *自动飞行速度
     * </pre>
     *
     * <code>float autoSpeed = 3;</code>
     */
    public float getAutoSpeed() {
      return autoSpeed_;
    }

    public static final int POINTS_FIELD_NUMBER = 4;
    private java.util.List<PointData> points_;
    /**
     * <pre>
     *坐标点数组
     * </pre>
     *
     * <code>repeated .PointData points = 4;</code>
     */
    public java.util.List<PointData> getPointsList() {
      return points_;
    }
    /**
     * <pre>
     *坐标点数组
     * </pre>
     *
     * <code>repeated .PointData points = 4;</code>
     */
    public java.util.List<? extends PointDataOrBuilder>
        getPointsOrBuilderList() {
      return points_;
    }
    /**
     * <pre>
     *坐标点数组
     * </pre>
     *
     * <code>repeated .PointData points = 4;</code>
     */
    public int getPointsCount() {
      return points_.size();
    }
    /**
     * <pre>
     *坐标点数组
     * </pre>
     *
     * <code>repeated .PointData points = 4;</code>
     */
    public PointData getPoints(int index) {
      return points_.get(index);
    }
    /**
     * <pre>
     *坐标点数组
     * </pre>
     *
     * <code>repeated .PointData points = 4;</code>
     */
    public PointDataOrBuilder getPointsOrBuilder(
        int index) {
      return points_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (finishedAction_ != 0) {
        output.writeUInt32(1, finishedAction_);
      }
      if (maxSpeed_ != 0F) {
        output.writeFloat(2, maxSpeed_);
      }
      if (autoSpeed_ != 0F) {
        output.writeFloat(3, autoSpeed_);
      }
      for (int i = 0; i < points_.size(); i++) {
        output.writeMessage(4, points_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (finishedAction_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, finishedAction_);
      }
      if (maxSpeed_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, maxSpeed_);
      }
      if (autoSpeed_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, autoSpeed_);
      }
      for (int i = 0; i < points_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, points_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof PlanLineData)) {
        return super.equals(obj);
      }
      PlanLineData other = (PlanLineData) obj;

      if (getFinishedAction()
          != other.getFinishedAction()) return false;
      if (Float.floatToIntBits(getMaxSpeed())
          != Float.floatToIntBits(
              other.getMaxSpeed())) return false;
      if (Float.floatToIntBits(getAutoSpeed())
          != Float.floatToIntBits(
              other.getAutoSpeed())) return false;
      if (!getPointsList()
          .equals(other.getPointsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FINISHEDACTION_FIELD_NUMBER;
      hash = (53 * hash) + getFinishedAction();
      hash = (37 * hash) + MAXSPEED_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getMaxSpeed());
      hash = (37 * hash) + AUTOSPEED_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getAutoSpeed());
      if (getPointsCount() > 0) {
        hash = (37 * hash) + POINTS_FIELD_NUMBER;
        hash = (53 * hash) + getPointsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static PlanLineData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PlanLineData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PlanLineData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PlanLineData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PlanLineData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PlanLineData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PlanLineData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static PlanLineData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static PlanLineData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static PlanLineData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static PlanLineData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static PlanLineData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(PlanLineData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PlanLineData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:PlanLineData)
        PlanLineDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return PlanLine.internal_static_PlanLineData_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return PlanLine.internal_static_PlanLineData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                PlanLineData.class, Builder.class);
      }

      // Construct using org.springblade.uav.proto.PlanLine.PlanLineData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPointsFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        finishedAction_ = 0;

        maxSpeed_ = 0F;

        autoSpeed_ = 0F;

        if (pointsBuilder_ == null) {
          points_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          pointsBuilder_.clear();
        }
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return PlanLine.internal_static_PlanLineData_descriptor;
      }

      @Override
      public PlanLineData getDefaultInstanceForType() {
        return PlanLineData.getDefaultInstance();
      }

      @Override
      public PlanLineData build() {
        PlanLineData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public PlanLineData buildPartial() {
        PlanLineData result = new PlanLineData(this);
        int from_bitField0_ = bitField0_;
        result.finishedAction_ = finishedAction_;
        result.maxSpeed_ = maxSpeed_;
        result.autoSpeed_ = autoSpeed_;
        if (pointsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            points_ = java.util.Collections.unmodifiableList(points_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.points_ = points_;
        } else {
          result.points_ = pointsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof PlanLineData) {
          return mergeFrom((PlanLineData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(PlanLineData other) {
        if (other == PlanLineData.getDefaultInstance()) return this;
        if (other.getFinishedAction() != 0) {
          setFinishedAction(other.getFinishedAction());
        }
        if (other.getMaxSpeed() != 0F) {
          setMaxSpeed(other.getMaxSpeed());
        }
        if (other.getAutoSpeed() != 0F) {
          setAutoSpeed(other.getAutoSpeed());
        }
        if (pointsBuilder_ == null) {
          if (!other.points_.isEmpty()) {
            if (points_.isEmpty()) {
              points_ = other.points_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePointsIsMutable();
              points_.addAll(other.points_);
            }
            onChanged();
          }
        } else {
          if (!other.points_.isEmpty()) {
            if (pointsBuilder_.isEmpty()) {
              pointsBuilder_.dispose();
              pointsBuilder_ = null;
              points_ = other.points_;
              bitField0_ = (bitField0_ & ~0x00000001);
              pointsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPointsFieldBuilder() : null;
            } else {
              pointsBuilder_.addAllMessages(other.points_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        PlanLineData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (PlanLineData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int finishedAction_ ;
      /**
       * <pre>
       *结束航线后动作：1返航，2原地悬停，3原地降落
       * </pre>
       *
       * <code>uint32 finishedAction = 1;</code>
       */
      public int getFinishedAction() {
        return finishedAction_;
      }
      /**
       * <pre>
       *结束航线后动作：1返航，2原地悬停，3原地降落
       * </pre>
       *
       * <code>uint32 finishedAction = 1;</code>
       */
      public Builder setFinishedAction(int value) {

        finishedAction_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *结束航线后动作：1返航，2原地悬停，3原地降落
       * </pre>
       *
       * <code>uint32 finishedAction = 1;</code>
       */
      public Builder clearFinishedAction() {

        finishedAction_ = 0;
        onChanged();
        return this;
      }

      private float maxSpeed_ ;
      /**
       * <pre>
       *最大飞行速度
       * </pre>
       *
       * <code>float maxSpeed = 2;</code>
       */
      public float getMaxSpeed() {
        return maxSpeed_;
      }
      /**
       * <pre>
       *最大飞行速度
       * </pre>
       *
       * <code>float maxSpeed = 2;</code>
       */
      public Builder setMaxSpeed(float value) {

        maxSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *最大飞行速度
       * </pre>
       *
       * <code>float maxSpeed = 2;</code>
       */
      public Builder clearMaxSpeed() {

        maxSpeed_ = 0F;
        onChanged();
        return this;
      }

      private float autoSpeed_ ;
      /**
       * <pre>
       *自动飞行速度
       * </pre>
       *
       * <code>float autoSpeed = 3;</code>
       */
      public float getAutoSpeed() {
        return autoSpeed_;
      }
      /**
       * <pre>
       *自动飞行速度
       * </pre>
       *
       * <code>float autoSpeed = 3;</code>
       */
      public Builder setAutoSpeed(float value) {

        autoSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *自动飞行速度
       * </pre>
       *
       * <code>float autoSpeed = 3;</code>
       */
      public Builder clearAutoSpeed() {

        autoSpeed_ = 0F;
        onChanged();
        return this;
      }

      private java.util.List<PointData> points_ =
        java.util.Collections.emptyList();
      private void ensurePointsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          points_ = new java.util.ArrayList<PointData>(points_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          PointData, PointData.Builder, PointDataOrBuilder> pointsBuilder_;

      /**
       * <pre>
       *坐标点数组
       * </pre>
       *
       * <code>repeated .PointData points = 4;</code>
       */
      public java.util.List<PointData> getPointsList() {
        if (pointsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(points_);
        } else {
          return pointsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *坐标点数组
       * </pre>
       *
       * <code>repeated .PointData points = 4;</code>
       */
      public int getPointsCount() {
        if (pointsBuilder_ == null) {
          return points_.size();
        } else {
          return pointsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *坐标点数组
       * </pre>
       *
       * <code>repeated .PointData points = 4;</code>
       */
      public PointData getPoints(int index) {
        if (pointsBuilder_ == null) {
          return points_.get(index);
        } else {
          return pointsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *坐标点数组
       * </pre>
       *
       * <code>repeated .PointData points = 4;</code>
       */
      public Builder setPoints(
          int index, PointData value) {
        if (pointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointsIsMutable();
          points_.set(index, value);
          onChanged();
        } else {
          pointsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *坐标点数组
       * </pre>
       *
       * <code>repeated .PointData points = 4;</code>
       */
      public Builder setPoints(
          int index, PointData.Builder builderForValue) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          points_.set(index, builderForValue.build());
          onChanged();
        } else {
          pointsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *坐标点数组
       * </pre>
       *
       * <code>repeated .PointData points = 4;</code>
       */
      public Builder addPoints(PointData value) {
        if (pointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointsIsMutable();
          points_.add(value);
          onChanged();
        } else {
          pointsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *坐标点数组
       * </pre>
       *
       * <code>repeated .PointData points = 4;</code>
       */
      public Builder addPoints(
          int index, PointData value) {
        if (pointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointsIsMutable();
          points_.add(index, value);
          onChanged();
        } else {
          pointsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *坐标点数组
       * </pre>
       *
       * <code>repeated .PointData points = 4;</code>
       */
      public Builder addPoints(
          PointData.Builder builderForValue) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          points_.add(builderForValue.build());
          onChanged();
        } else {
          pointsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *坐标点数组
       * </pre>
       *
       * <code>repeated .PointData points = 4;</code>
       */
      public Builder addPoints(
          int index, PointData.Builder builderForValue) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          points_.add(index, builderForValue.build());
          onChanged();
        } else {
          pointsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *坐标点数组
       * </pre>
       *
       * <code>repeated .PointData points = 4;</code>
       */
      public Builder addAllPoints(
          Iterable<? extends PointData> values) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, points_);
          onChanged();
        } else {
          pointsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *坐标点数组
       * </pre>
       *
       * <code>repeated .PointData points = 4;</code>
       */
      public Builder clearPoints() {
        if (pointsBuilder_ == null) {
          points_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          pointsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *坐标点数组
       * </pre>
       *
       * <code>repeated .PointData points = 4;</code>
       */
      public Builder removePoints(int index) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          points_.remove(index);
          onChanged();
        } else {
          pointsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *坐标点数组
       * </pre>
       *
       * <code>repeated .PointData points = 4;</code>
       */
      public PointData.Builder getPointsBuilder(
          int index) {
        return getPointsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *坐标点数组
       * </pre>
       *
       * <code>repeated .PointData points = 4;</code>
       */
      public PointDataOrBuilder getPointsOrBuilder(
          int index) {
        if (pointsBuilder_ == null) {
          return points_.get(index);  } else {
          return pointsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *坐标点数组
       * </pre>
       *
       * <code>repeated .PointData points = 4;</code>
       */
      public java.util.List<? extends PointDataOrBuilder>
           getPointsOrBuilderList() {
        if (pointsBuilder_ != null) {
          return pointsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(points_);
        }
      }
      /**
       * <pre>
       *坐标点数组
       * </pre>
       *
       * <code>repeated .PointData points = 4;</code>
       */
      public PointData.Builder addPointsBuilder() {
        return getPointsFieldBuilder().addBuilder(
            PointData.getDefaultInstance());
      }
      /**
       * <pre>
       *坐标点数组
       * </pre>
       *
       * <code>repeated .PointData points = 4;</code>
       */
      public PointData.Builder addPointsBuilder(
          int index) {
        return getPointsFieldBuilder().addBuilder(
            index, PointData.getDefaultInstance());
      }
      /**
       * <pre>
       *坐标点数组
       * </pre>
       *
       * <code>repeated .PointData points = 4;</code>
       */
      public java.util.List<PointData.Builder>
           getPointsBuilderList() {
        return getPointsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          PointData, PointData.Builder, PointDataOrBuilder>
          getPointsFieldBuilder() {
        if (pointsBuilder_ == null) {
          pointsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              PointData, PointData.Builder, PointDataOrBuilder>(
                  points_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          points_ = null;
        }
        return pointsBuilder_;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:PlanLineData)
    }

    // @@protoc_insertion_point(class_scope:PlanLineData)
    private static final PlanLineData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new PlanLineData();
    }

    public static PlanLineData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PlanLineData>
        PARSER = new com.google.protobuf.AbstractParser<PlanLineData>() {
      @Override
      public PlanLineData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PlanLineData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PlanLineData> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<PlanLineData> getParserForType() {
      return PARSER;
    }

    @Override
    public PlanLineData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PointDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PointData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *经度
     * </pre>
     *
     * <code>double lng = 1;</code>
     */
    double getLng();

    /**
     * <pre>
     *纬度
     * </pre>
     *
     * <code>double lat = 2;</code>
     */
    double getLat();

    /**
     * <pre>
     *高度
     * </pre>
     *
     * <code>uint32 height = 3;</code>
     */
    int getHeight();
  }
  /**
   * Protobuf type {@code PointData}
   */
  public  static final class PointData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:PointData)
      PointDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PointData.newBuilder() to construct.
    private PointData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PointData() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new PointData();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PointData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 9: {

              lng_ = input.readDouble();
              break;
            }
            case 17: {

              lat_ = input.readDouble();
              break;
            }
            case 24: {

              height_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return PlanLine.internal_static_PointData_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return PlanLine.internal_static_PointData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              PointData.class, Builder.class);
    }

    public static final int LNG_FIELD_NUMBER = 1;
    private double lng_;
    /**
     * <pre>
     *经度
     * </pre>
     *
     * <code>double lng = 1;</code>
     */
    public double getLng() {
      return lng_;
    }

    public static final int LAT_FIELD_NUMBER = 2;
    private double lat_;
    /**
     * <pre>
     *纬度
     * </pre>
     *
     * <code>double lat = 2;</code>
     */
    public double getLat() {
      return lat_;
    }

    public static final int HEIGHT_FIELD_NUMBER = 3;
    private int height_;
    /**
     * <pre>
     *高度
     * </pre>
     *
     * <code>uint32 height = 3;</code>
     */
    public int getHeight() {
      return height_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (lng_ != 0D) {
        output.writeDouble(1, lng_);
      }
      if (lat_ != 0D) {
        output.writeDouble(2, lat_);
      }
      if (height_ != 0) {
        output.writeUInt32(3, height_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (lng_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, lng_);
      }
      if (lat_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, lat_);
      }
      if (height_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, height_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof PointData)) {
        return super.equals(obj);
      }
      PointData other = (PointData) obj;

      if (Double.doubleToLongBits(getLng())
          != Double.doubleToLongBits(
              other.getLng())) return false;
      if (Double.doubleToLongBits(getLat())
          != Double.doubleToLongBits(
              other.getLat())) return false;
      if (getHeight()
          != other.getHeight()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + LNG_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getLng()));
      hash = (37 * hash) + LAT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getLat()));
      hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + getHeight();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static PointData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PointData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PointData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PointData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PointData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PointData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PointData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static PointData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static PointData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static PointData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static PointData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static PointData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(PointData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PointData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:PointData)
        PointDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return PlanLine.internal_static_PointData_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return PlanLine.internal_static_PointData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                PointData.class, Builder.class);
      }

      // Construct using org.springblade.uav.proto.PlanLine.PointData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        lng_ = 0D;

        lat_ = 0D;

        height_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return PlanLine.internal_static_PointData_descriptor;
      }

      @Override
      public PointData getDefaultInstanceForType() {
        return PointData.getDefaultInstance();
      }

      @Override
      public PointData build() {
        PointData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public PointData buildPartial() {
        PointData result = new PointData(this);
        result.lng_ = lng_;
        result.lat_ = lat_;
        result.height_ = height_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof PointData) {
          return mergeFrom((PointData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(PointData other) {
        if (other == PointData.getDefaultInstance()) return this;
        if (other.getLng() != 0D) {
          setLng(other.getLng());
        }
        if (other.getLat() != 0D) {
          setLat(other.getLat());
        }
        if (other.getHeight() != 0) {
          setHeight(other.getHeight());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        PointData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (PointData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private double lng_ ;
      /**
       * <pre>
       *经度
       * </pre>
       *
       * <code>double lng = 1;</code>
       */
      public double getLng() {
        return lng_;
      }
      /**
       * <pre>
       *经度
       * </pre>
       *
       * <code>double lng = 1;</code>
       */
      public Builder setLng(double value) {

        lng_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *经度
       * </pre>
       *
       * <code>double lng = 1;</code>
       */
      public Builder clearLng() {

        lng_ = 0D;
        onChanged();
        return this;
      }

      private double lat_ ;
      /**
       * <pre>
       *纬度
       * </pre>
       *
       * <code>double lat = 2;</code>
       */
      public double getLat() {
        return lat_;
      }
      /**
       * <pre>
       *纬度
       * </pre>
       *
       * <code>double lat = 2;</code>
       */
      public Builder setLat(double value) {

        lat_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *纬度
       * </pre>
       *
       * <code>double lat = 2;</code>
       */
      public Builder clearLat() {

        lat_ = 0D;
        onChanged();
        return this;
      }

      private int height_ ;
      /**
       * <pre>
       *高度
       * </pre>
       *
       * <code>uint32 height = 3;</code>
       */
      public int getHeight() {
        return height_;
      }
      /**
       * <pre>
       *高度
       * </pre>
       *
       * <code>uint32 height = 3;</code>
       */
      public Builder setHeight(int value) {

        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *高度
       * </pre>
       *
       * <code>uint32 height = 3;</code>
       */
      public Builder clearHeight() {

        height_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:PointData)
    }

    // @@protoc_insertion_point(class_scope:PointData)
    private static final PointData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new PointData();
    }

    public static PointData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PointData>
        PARSER = new com.google.protobuf.AbstractParser<PointData>() {
      @Override
      public PointData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PointData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PointData> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<PointData> getParserForType() {
      return PARSER;
    }

    @Override
    public PointData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_PlanLineData_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_PlanLineData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_PointData_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_PointData_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\016PlanLine.proto\"g\n\014PlanLineData\022\026\n\016fini" +
      "shedAction\030\001 \001(\r\022\020\n\010maxSpeed\030\002 \001(\002\022\021\n\tau" +
      "toSpeed\030\003 \001(\002\022\032\n\006points\030\004 \003(\0132\n.PointDat" +
      "a\"5\n\tPointData\022\013\n\003lng\030\001 \001(\001\022\013\n\003lat\030\002 \001(\001" +
      "\022\016\n\006height\030\003 \001(\rB%\n\031org.springblade.uav." +
      "protoB\010PlanLineb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_PlanLineData_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_PlanLineData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_PlanLineData_descriptor,
        new String[] { "FinishedAction", "MaxSpeed", "AutoSpeed", "Points", });
    internal_static_PointData_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_PointData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_PointData_descriptor,
        new String[] { "Lng", "Lat", "Height", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
